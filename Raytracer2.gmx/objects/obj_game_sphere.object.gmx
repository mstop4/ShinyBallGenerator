<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ball_ambient</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>segments = 18;
complete = false;
var hue = random(255);
my_col = make_colour_hsv(hue,255,255);

for (var i=0; i&lt;segments; i++)
{
    slice[i] = 0;
}

slice_arc_size = 360/segments;
arc_step = 10;
theta = 0;

image_xscale = segments/16;
image_yscale = segments/16;

speed = random(2);
direction = random(360);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>theta = (theta + 1) mod 360;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_shot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var aa = point_direction(x,y,other.x,other.y);
var which_slice = (aa-theta+180);

if (which_slice &lt; 0) which_slice += 360;
else if (which_slice &gt; 360) which_slice -= 360;

which_slice = which_slice div slice_arc_size;

if (slice[which_slice] &lt; 2)
{
    slice[which_slice]++;
    score += 10;
    audio_play_sound(snd_hit,0,false);
}

var sum = 0;

if (!complete)
{
    for (var i=0; i&lt;segments; i++)
        sum += slice[i];
        
    if (sum == segments * 2)
    {
        complete = true;
        obj_MCP.num_complete++;
        score += 100 * segments;
        audio_play_sound(snd_complete,0,false);
    }
}

with (other) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>complete = false;
var hue = random(255);
my_col = make_colour_hsv(hue,255,255);

for (var i=0; i&lt;segments; i++)
{
    slice[i] = 0;
}

slice_arc_size = 360/segments;
theta = 0;

image_xscale = segments/16;
image_yscale = segments/16;

speed = random(2);
direction = random(360);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>112</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_wrap</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!complete)
{
    for (var i=0; i&lt;segments; i++)
    {
        if (slice[i] == 0)
            col = sprite_get_texture(spr_ball_blank,0);
        else if (slice[i] == 1)
            col = sprite_get_texture(spr_ball_ambient,0);
        else
            col = sprite_get_texture(spr_ball_diffuse,0);
        
        draw_primitive_begin_texture(pr_trianglefan,col);
            draw_vertex_texture_colour(x,y,0.5,0.5,my_col,1);
    
            for (var j=0; j&lt;=slice_arc_size; j+=arc_step)
            {
                draw_vertex_texture_colour(x-dcos(j+i*slice_arc_size+theta)*segments*8,
                                           y+dsin(j+i*slice_arc_size+theta)*segments*8,
                                           -dcos(j+i*slice_arc_size+theta)/2+0.5,dsin(j+i*slice_arc_size+theta)/2+0.5,
                                           my_col,1);
            }
            
        draw_primitive_end();
    }
}

else
{
    draw_sprite_ext(spr_ball_diffuse,0,x,y,image_xscale,image_yscale,0,my_col,1);
    draw_sprite_ext(spr_ball_specular,0,x,y,image_xscale*2,image_yscale*2,0,c_white,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
